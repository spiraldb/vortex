name: "Setup Rust"
description: "Toolchain setup and Initial compilation"
inputs:
  rye-version:
    description: "Rye version to use"
    required: true
    default: "0.41.0"
runs:
  using: "composite"
  steps:
    - name: Rye Cache
      id: rye-cache
      uses: actions/cache@v4
      with:
        path: ~/.rye
        key: "rye-${{ runner.os }}-${{ runner.environment }}-${{ inputs.rye-version }}"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Rye Install
      shell: bash
      run: curl -sSf https://rye.astral.sh/get | bash
      if: steps.rye-cache.outputs.cache-hit != 'true'
      env:
        RYE_VERSION: "${{ inputs.rye-version }}"
        RYE_TOOLCHAIN_VERSION: "3.11"
        RYE_INSTALL_OPTION: "--yes"

    - name: Rye Shims
      shell: bash
      run: echo "~/.rye/shims" >> $GITHUB_PATH

    - name: Venv Cache
      id: venv-cache
      uses: actions/cache@v4
      with:
        path: .venv
        key: "venv-${{ runner.os }}-${{ runner.environment }}-${{ hashFiles('requirements**.lock') }}"

    - name: Rye Sync
      shell: bash
      # --no-lock prevents resolution of the lock file. The locks are still respected.
      # We always run `rye sync` even if the cache fetch was successful since it builds our Rust extensions for us.
      run: rye sync --no-lock
      env:
        MATURIN_PEP517_USE_BASE_PYTHON: "true"
        MATURIN_PEP517_ARGS: "--profile dev"
        PYO3_ENVIRONMENT_SIGNATURE: cpython-3.11-64bit

    - name: Export Path
      shell: bash
      run: echo "PATH=$PATH" >> $GITHUB_ENV
