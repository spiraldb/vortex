name: 'Setup Rust'
description: 'Toolchain setup and Initial compilation'
inputs:
  rye-version:
    description: 'Rye version to use'
    required: true
    default: '0.36.0'
outputs:
  python-major-version:
    description: "The installed Python major version"
    value: ${{ steps.Rye Install.outputs.python-major-version }}
  python-version:
    description: "The installed Python version"
    value: ${{ steps.Rye Install.outputs.python-version }}
runs:
  using: "composite"
  steps:
    - name: Rye Cache
      id: rye-cache
      uses: actions/cache@v4
      with:
        path: ~/.rye
        key: "rye-${{ runner.os }}-${{ inputs.rye-version }}"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11.9'

    - name: Rye Install
      shell: bash
      run: |
        curl -sSf https://rye.astral.sh/get | bash
        printf python-major-version= >> $GITHUB_OUTPUT
        python3 -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")' >> $GITHUB_OUTPUT
        printf python-version= >> $GITHUB_OUTPUT
        python3 -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}")' >> $GITHUB_OUTPUT
      if: steps.rye-cache.outputs.cache-hit != 'true'
      env:
        RYE_VERSION: "${{ inputs.rye-version }}"
        RYE_TOOLCHAIN_VERSION: "3.11.9"
        RYE_INSTALL_OPTION: "--yes"

    - name: Rye Shims
      shell: bash
      run: echo "~/.rye/shims" >> $GITHUB_PATH

    - name: Venv Cache
      id: venv-cache
      uses: actions/cache@v4
      with:
        path: .venv
        key: "venv-${{ runner.os }}-${{ hashFiles('requirements**.lock') }}"

    - name: Export PYO3 Path
      shell: bash
      # Figure out a way to dynamically get python version
      run: |
        echo "PYO3_PYTHON=/home/runner/work/vortex/vortex/.venv/bin/python" >> $GITHUB_ENV
        echo "PYO3_ENVIRONMENT_SIGNATURE=cpython-3.11-64bit" >> $GITHUB_ENV

    - name: Rye Sync
      shell: bash
      # --no-lock prevents resolution of the lock file. The locks are still respected.
      # We always run `rye sync` even if the cache fetch was successful since it builds our Rust extensions for us.
      run: rye sync --no-lock
      env:
        MATURIN_PEP517_ARGS: "--profile dev"

    - name: Export Path
      shell: bash
      run: echo "PATH=$PATH" >> $GITHUB_ENV

