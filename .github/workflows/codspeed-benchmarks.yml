name: codspeed-benchmarks

on:
  # Run on pushes to the main branch
  push:
    branches:
      - "master" # or "main"
  # Run on pull requests
  pull_request:
  # `workflow_dispatch` allows CodSpeed to trigger backtest
  # performance analysis in order to generate initial data.
  workflow_dispatch:

jobs:
  benchmarks:
    runs-on: ubuntu-latest
    # if: ${{ contains(github.event.head_commit.message, '[benchmark]') || github.event.label.name == 'benchmark' && github.event_name == 'pull_request' }}
    steps:
      # # We remove the benchmark label first so that the workflow can be re-triggered.
      # - uses: actions-ecosystem/action-remove-labels@v1
      #   with:
      #     labels: benchmark

      - uses: actions/checkout@v4
      - uses: ./.github/actions/cleanup
      - uses: ./.github/actions/setup-rust

      # The compression benchmarks rely on DuckDB being installed to convert CSV to Parquet
      - name: Install DuckDB
        uses: opt-nc/setup-duckdb-action@v1.0.9
        with:
          version: v1.0.0
      - name: Build benchmarks
        shell: bash
        run: cargo install cargo-codspeed && cargo codspeed build

      - name: Run the benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          run: cargo codspeed run
          token: ${{ secrets.CODSPEED_TOKEN }}
