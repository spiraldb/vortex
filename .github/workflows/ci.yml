name: CI

on:
  push:
    branches: [ "develop" ]
  pull_request: { }
  workflow_dispatch: { }

permissions:
  actions: read
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: 'build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/cleanup

      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - uses: ./.github/actions/setup-rust
      - uses: ./.github/actions/setup-python

      - name: Python Lint - Format
        run: rye run ruff format --check .
      - name: Python Lint - Ruff
        run: rye run ruff check .

      - name: Rust Lint - Format
        run: cargo fmt --all --check
      - name: Rust Lint - Clippy
        run: cargo clippy --all-features --all-targets
      - name: Docs
        run: cargo doc --no-deps
      - name: Rust Test
        run: cargo test --workspace --all-features
      - name: Rust Build
        run: cargo build --all-features --all-targets

      - name: Pytest - PyVortex
        run: rye run pytest --benchmark-disable test/
        working-directory: pyvortex/

      - name: License Check
        run: cargo install --locked cargo-deny && cargo deny check
      - uses: rustsec/audit-check@v1.4.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}


  miri:
    name: 'miri'
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1
      MIRIFLAGS: -Zmiri-strict-provenance -Zmiri-symbolic-alignment-check -Zmiri-backtrace=full
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/cleanup

      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - uses: ./.github/actions/setup-rust

      - name: Run tests with Miri
        run: cargo miri test
